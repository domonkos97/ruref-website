@startuml
class RurefApplication {
-users: List<User>
}



class NewsAggregator{
-List<News> news
+getAllNews(): List<News>
+getNewsById(): News
+addNews(): News
+deleteNews(): News
+updateNews(): News
}

class NewsModel {
- id: UUID
- dateOfArticle: LocalDate
- Author: Author
- title: String
- body: String
- category: Category/List<String>
}

RurefApplication -- NewsAggregator
NewsAggregator -- NewsModel


class EventModel {
- startOfEvent: LocalDateTime
- endOfEvent: LocalDateTime
- location: String
- attendees: List<User>
- recurrence:
- reminderOverridesMinutesBefore: int
- description: String
- calendarId: String
}

class UserAggregator {
- users: List<User>
}

UserModel -- AccessType



class UserModel{
- email: String
- name: String
- password: String
- access: AccessType
}

enum AccessType {
SUPER,
OTHER
}

class EventAggregator {
- events: List<Event>
}

RurefApplication -- UserAggregator
RurefApplication -- EventAggregator
EventAggregator --EventModel
UserAggregator -- UserModel

@enduml

search by Author - would be nice
search by dateOfArticle
filter by Author, sort by dateOfArticle etc...

modules : contains: news, events,